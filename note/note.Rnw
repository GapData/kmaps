\documentclass[11pt, a4paper]{article}
\usepackage[utf8]{inputenc}

\usepackage[colorlinks=true]{hyperref}
\usepackage{subfigure}
\usepackage{xcolor}
  \newcommand{\cfbox}[2]{
    \colorlet{currentcolor}{black}
    {\color{#1}
      \fbox{\color{currentcolor}#2}}
    }
\usepackage{geometry} 
	\geometry{a4paper, textwidth=5.5in, textheight=9.6in, marginparwidth=.6in}
	\setlength\parindent{0em}
  \setlength\parskip{1em}

\title{\texttt{kmaps}}
	\author{François Briatte}
	\date{\today}

\begin{document}

	\maketitle

	\section*{Description}
	
	This note documents a code snippet that I use to produce maps like the ones on the next page. It might help people working on European country-level data, which is fairly common in comparative politics.
  
  The code works with the companion dataset and shapefiles; see \texttt{README} for a description of both. It relies on \texttt{ISO-2} alphabetical country codes to match them together.
  
  I still need to write a full-fledged function to make the data and graphics completely flexible.

	\section*{Use}
	
	You will need \texttt{R}, your data and a few \texttt{ESRI} shapefiles that can be read with the \texttt{maptools} package. The current version of the code also uses \texttt{ggplot2} to draw the maps with maximum gusta.

<<results=hide,echo=false>>=
setwd("~/Documents/Research/Code/Projects/kmaps") #! edit to reflect local path

library(maptools); if (!rgeosStatus()) gpclibPermit() # allows fortify method
library(ggplot2)
library(RColorBrewer)
library(reshape)
library(grid)

theme_map = function(size=12) # scrapped from Osmo Salomaa 
{
  o = list(axis.line=theme_blank(),
           axis.text.x=theme_blank(),
           axis.text.y=theme_blank(),
           axis.ticks=theme_blank(),
           axis.ticks.length=unit(0.3, "lines"),
           axis.ticks.margin=unit(0.5, "lines"),
           axis.title.x=theme_blank(),
           axis.title.y=theme_blank(),
           legend.background=theme_rect(fill="white", colour=NA),
           legend.key=theme_rect(colour="white"),
           legend.key.size=unit(1.2, "lines"),
           legend.justification=c(0,0), # bottom of box
           legend.position=c(0,0),      # bottom of picture
           legend.text=theme_text(size=size*0.8),
           legend.title=theme_text(size=size*0.8, face="bold",hjust=0),
           panel.background=theme_blank(),
           panel.border=theme_blank(),
           panel.grid.major=theme_blank(),
           panel.grid.minor=theme_blank(),
           panel.margin=unit(0, "lines"),
           plot.background=theme_blank(),
           plot.margin=unit(c(1, 1, 0.5, 0.5), "lines"),
           plot.title=theme_text(size=size*1.2),
           strip.background=theme_rect(fill="grey90",colour="grey50"),
           strip.text.x=theme_text(size=size*0.8),
           strip.text.y=theme_text(size=size*0.8, angle=-90))
  return(structure(o, class="options")) 
}

# Data.
eco <- subset(read.csv("eco.csv",header=T,sep=","), iso2!="EU27") #; names(eco)
map <- readShapeSpatial("maps/data/CNTR_RG_60M_2006",proj4string=CRS("+proj=longlat"))
map <- rename(map, c(CNTR_ID="iso2")) #; summary(map)

setwd("note") #! move to saving folder for Sweave output
@

  The most important chunk of code follows:

<<results=hide,echo=true>>=
# Match.
map@data$id <- rownames(map@data)           # coded by Hadley Wickham (thanks!)
map.points <- fortify(map, region = "id")   # fixed by Roger Peng (thanks!)
map.df <- join(map.points,map@data,by="id") # match map and rows
map.df <- join(map.df,eco, by="iso2")       # match map and data
@

  \subsection*{Coordinates}

  The map is tentatively centred on the European Union by passing Cartesian coordinates to \texttt{ggplot2}. I use a range of [-24, 35] for longitude and a range of [34, 72] for latitude.
  
  The next page shows two examples.

<<mr_lung_m, fig=true,include=false,echo=false,results=hide>>=
# Lung cancer mortality rates, males
plim <- c(min(eco$mr_lung_m),max(eco$mr_lung_m))
map.df.missing <- subset(map.df,is.na(mr_lung_m))
mr_lung_m <- ggplot(map.df) + aes(long,lat,group=group,fill=mr_lung_m) + 
  geom_polygon() + scale_fill_gradient("", limits=plim,low="yellow",high="red") +   
  geom_polygon(data=map.df.missing,aes(long,lat,group=group),fill="lightgrey") +
  coord_cartesian(xlim = c(-24, 35), ylim = c(34, 72))  +  
  geom_path(color="white") + theme_map(); mr_lung_m
@

<<mr_lung_f, fig=true,include=false,echo=false,results=hide>>=
plim <- c(min(eco$mr_lung_f),max(eco$mr_lung_f))
map.df.missing <- subset(map.df,is.na(mr_lung_f))
mr_lung_f <- ggplot(map.df) + aes(long,lat,group=group,fill=mr_lung_f) + 
  geom_polygon() + scale_fill_gradient("", limits=plim,low="yellow",high="red") +
  geom_polygon(data=map.df.missing,aes(long,lat,group=group),fill="lightgrey") +
  coord_cartesian(xlim = c(-24, 35), ylim = c(34, 72))  +  
  geom_path(color="white") + theme_map(); mr_lung_f
@

\begin{figure}[htbp]
	\centering
	\subfigure[Males]
	{
		{%
			\setlength{\fboxsep}{-.5pt}%
			\setlength{\fboxrule}{.5pt}%
			\cfbox{gray}{\includegraphics[width=.75\textwidth]{note-mr_lung_m.pdf}}%
		}%
	}%
	
	\subfigure[Females]
	{
		{%
			\setlength{\fboxsep}{-.5pt}%
			\setlength{\fboxrule}{.5pt}%
			\cfbox{gray}{\includegraphics[width=.75\textwidth]{note-mr_lung_f.pdf}}%
		}%
	}%
	
	\caption{Estimated lung cancer mortality in European countries, 2008. All rates are age-standardised to the European population. Data: European Cancer Observatory. Maps: \textsc{gisco} -- Eurostat, European Commission, 2006.}
	\label{fig:ex1}
\end{figure}

  \section*{Credits}

  Thanks go to \href{http://coulmont.com/}{Baptiste Coulmont} and \href{http://www.biostat.jhsph.edu/~rpeng/}{Roger Peng} for helping a lot with bugs, to \href{http://www.joelgombin.fr/}{Joël Gombin} and \href{http://umr5600.univ-lyon3.fr/chercheur/verdeil/verdeil.htm}{Éric Verdeil} for commenting on early drafts, and to \href{https://github.com/otsaloma}{Osmo Salomaa} and \href{http://had.co.nz/}{Hadley Wickham} for contributing some code fragments. Additional help was also available at all times from the Stack Exchange network.

\end{document}